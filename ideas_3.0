- Remove negative stack, it's simply too confusing and never really worked
- Better handling of numbers, proper arbitrary precission support
- Implement conditionals. Mix between old system and Forth with then/else?
  Maybe apply concept of negative stack to commands instead. gofwd for example
  could be made to work as long as it can keep state.. Or a simpler solution..
  Maybe move if to end? So an if statement would look like `<if label> actions
  <else label> more actions <condition> <` smaller than then pops the value of
  the condition of the stack, checks the condition and then extracts all the
  code from the stack into commands and runs the correct one. Or maybe
  `label1 label2 condition <` where label1 and label2 are probably left my mkcmd
- Implement [] for inline commands. [ stops execution of commands while ] goes
  back to the past [ and creates a command out of everything on the stack.
- Reintroduce label counters and gotos.

Conditionals:
Syntax `a b <if> <else> <condition>` where `<if>` and `<else>` is a command and
`<condition>` is one of the defined conditions. E.g:
`100 2 [ "Smaller than" print ] [ "Larger than" printÂ ] <`. This keeps the code
close to the condition and you don't have to shuffle the stack if you want to
perform a condition on the first input to a command. This example also uses the
new [] syntax to create commands. Perhaps implement an `escape`/`noescape` set
of commands which does part of what `[`/`]` does but in user code?
